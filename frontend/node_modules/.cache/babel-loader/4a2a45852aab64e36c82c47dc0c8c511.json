{"ast":null,"code":"var _jsxFileName = \"/home/yusuf/frontend/src/pages/UserSignupPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { signup, changeLanguage } from '../api/apiCalls';\nimport Input from '../components/Input';\nimport { withTranslation } from 'react-i18next';\n\nclass UserSignupPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      displayName: null,\n      password: null,\n      passwordRepeat: null,\n      pendingApiCall: false,\n      errors: {}\n    };\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target; // object parçalama event targetin içindeki name ve value yi al anlamına geliyor\n\n      const errors = { ...this.state.errors\n      };\n      errors[name] = undefined;\n      const {\n        t\n      } = this.props;\n\n      if (name === 'password' || name === 'passwordRepeat') {\n        if (name === 'password' && value !== this.state.passwordRepeat) errors.passwordRepeat = t('Password mismatch');else if (name === 'passwordRepeat' && value !== this.state.password) errors.passwordRepeat = t('Password mismatch');else errors.passwordRepeat = undefined;\n      }\n\n      this.setState({\n        [name]: value,\n        errors\n      });\n    };\n\n    this.onChangeLanguage = language => {\n      const {\n        i18n\n      } = this.props;\n      i18n.changeLanguage(language);\n      changeLanguage(language);\n    };\n\n    this.onClickSignup = async event => {\n      event.preventDefault();\n      const {\n        username,\n        displayName,\n        password\n      } = this.state;\n      const body = {\n        username,\n        displayName,\n        password\n      };\n      this.setState({\n        pendingApiCall: true\n      });\n\n      try {\n        const response = await signup(body);\n      } catch (error) {\n        if (error.response.data.validationErrors) {\n          this.setState({\n            errors: error.response.data.validationErrors\n          });\n        }\n      }\n\n      this.setState({\n        pendingApiCall: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      pendingApiCall,\n      errors\n    } = this.state;\n    const {\n      username,\n      displayName,\n      password,\n      passwordRepeat\n    } = errors;\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, t('Sign Up')), /*#__PURE__*/React.createElement(Input, {\n      name: \"username\",\n      onChange: this.onChange,\n      label: t('Username'),\n      error: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"displayName\",\n      onChange: this.onChange,\n      label: t(\"Display Name\"),\n      error: displayName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      onChange: this.onChange,\n      label: t('Password'),\n      error: password,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"passwordRepeat\",\n      onChange: this.onChange,\n      label: t('Password Repeat'),\n      error: passwordRepeat,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.onClickSignup,\n      disabled: pendingApiCall || passwordRepeat !== undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 1\n      }\n    }, pendingApiCall && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 28\n      }\n    }), \" \", t('Sign Up')))));\n  }\n\n}\n\nexport default withTranslation()(UserSignupPage);","map":{"version":3,"sources":["/home/yusuf/frontend/src/pages/UserSignupPage.js"],"names":["React","axios","signup","changeLanguage","Input","withTranslation","UserSignupPage","Component","state","username","displayName","password","passwordRepeat","pendingApiCall","errors","onChange","event","name","value","target","undefined","t","props","setState","onChangeLanguage","language","i18n","onClickSignup","preventDefault","body","response","error","data","validationErrors","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {signup,changeLanguage} from '../api/apiCalls' \nimport Input from '../components/Input'\nimport { withTranslation  } from 'react-i18next';\n\nclass UserSignupPage extends React.Component{    \n\n    state = {\n        username : null,\n        displayName : null,\n        password : null,\n        passwordRepeat : null,\n        pendingApiCall:false,\n        errors: {}\n\n    };\n\n\n    onChange = event => {\n        const {name,value}=event.target;  // object parçalama event targetin içindeki name ve value yi al anlamına geliyor\n        const errors = { ...this.state.errors };\n        errors[name]=undefined;\n        const {t}=this.props;\n     \n        if (name === 'password' || name === 'passwordRepeat') {\n            if (name === 'password' && value !== this.state.passwordRepeat) \n              errors.passwordRepeat = t('Password mismatch');\n             else if (name === 'passwordRepeat' && value !== this.state.password) \n              errors.passwordRepeat = t('Password mismatch');\n             else \n              errors.passwordRepeat = undefined;\n          }\n\n        this.setState({\n            [name] : value,\n            errors\n        });\n    };\n\n    \n    onChangeLanguage = language => {\n\n        const {i18n} = this.props;\n    \n        i18n.changeLanguage(language);\n        changeLanguage(language);\n\n\n    }\n\n\n    onClickSignup = async event =>{\n        event.preventDefault();    \n        const {username, displayName , password}=this.state;\n        const body={\n            username,\n            displayName,\n            password\n        };\n\n        this.setState(\n           { pendingApiCall : true}\n        );    \n        try {\n            \n            const response = await signup(body);\n\n        } catch (error) {\n            if (error.response.data.validationErrors) {\n                    this.setState({ errors: error.response.data.validationErrors });\n            }\n                }\n        this.setState({pendingApiCall:false});     \n    };\nrender(){\n\n    const {pendingApiCall,errors} = this.state;\n    const {username,displayName,password,passwordRepeat}=errors;\n    const { t } = this.props;\n    return(\n\n        <div className=\"container\">\n<form>\n    <h1 className=\"text-center\">{t('Sign Up')}</h1>\n    <Input name=\"username\" onChange={this.onChange} label ={t('Username')}  error={username} />\n    <Input name=\"displayName\" onChange={this.onChange} label = {t(\"Display Name\")} error={displayName} />\n    <Input name=\"password\" onChange={this.onChange} label = {t('Password')} error={password} type=\"password\"/>\n    <Input name=\"passwordRepeat\" onChange={this.onChange} label= {t('Password Repeat')} error={passwordRepeat} type=\"password\" />     \n\n\n<div className=\"text-center\">\n<button className=\"btn btn-primary\" onClick={this.onClickSignup} disabled={pendingApiCall || passwordRepeat !== undefined}>\n        {pendingApiCall && <span className=\"spinner-border spinner-border-sm\" ></span> } {t('Sign Up')}\n        </button>\n</div>\n        </form>\n        </div>\n    );\n\n}\n}\nexport default withTranslation()(UserSignupPage);"]},"metadata":{},"sourceType":"module"}