{"ast":null,"code":"var _jsxFileName = \"/home/yusuf/frontend/src/shared/ApiProgress.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ApiProgress extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pendingApiCall: false\n    };\n\n    this.updateApiCallFor = (url, inProgress) => {\n      if (url == this.props.path) {\n        this.setState({\n          pendingApiCall: inProgress\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.interceptors.request.use(request => {\n      this.updateApiCallFor(request.url, true);\n      return request;\n    });\n    axios.interceptors.response.use(response => {\n      this.updateApiCallFor(response.config.url, false);\n      return response;\n    }, error => {\n      this.updateApiCallFor(error.config.url, false);\n      throw error;\n    });\n  }\n\n  render() {\n    const {\n      pendingApiCall\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"    \", React.cloneElement(this.props.children, {\n      pendingApiCall\n    }));\n  }\n\n}\n\nexport default ApiProgress;","map":{"version":3,"sources":["/home/yusuf/frontend/src/shared/ApiProgress.js"],"names":["React","Component","axios","ApiProgress","state","pendingApiCall","updateApiCallFor","url","inProgress","props","path","setState","componentDidMount","interceptors","request","use","response","config","error","render","cloneElement","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AACNC,MAAAA,cAAc,EAAE;AADV,KAD0B;;AAAA,SAuB9BC,gBAvB8B,GAuBX,CAACC,GAAD,EAAKC,UAAL,KAAkB;AACjC,UAAID,GAAG,IAAI,KAAKE,KAAL,CAAWC,IAAtB,EAA4B;AACxB,aAAKC,QAAL,CAAc;AACVN,UAAAA,cAAc,EAACG;AADL,SAAd;AAGH;AACJ,KA7B6B;AAAA;;AAKhCI,EAAAA,iBAAiB,GAAE;AAEfV,IAAAA,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BD,OAAO,IAAI;AACtC,WAAKR,gBAAL,CAAsBQ,OAAO,CAACP,GAA9B,EAAkC,IAAlC;AACA,aAAOO,OAAP;AACH,KAHD;AAKAZ,IAAAA,KAAK,CAACW,YAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CAAiCC,QAAQ,IAAI;AACzC,WAAKV,gBAAL,CAAsBU,QAAQ,CAACC,MAAT,CAAgBV,GAAtC,EAA0C,KAA1C;AACA,aAAOS,QAAP;AACH,KAHD,EAIKE,KAAK,IAAG;AACJ,WAAKZ,gBAAL,CAAsBY,KAAK,CAACD,MAAN,CAAaV,GAAnC,EAAuC,KAAvC;AACA,YAAMW,KAAN;AACC,KAPV;AASD;;AAUHC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACd,MAAAA;AAAD,QAAiB,KAAKD,KAA5B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUJ,KAAK,CAACoB,YAAN,CAAmB,KAAKX,KAAL,CAAWY,QAA9B,EAAuC;AAAChB,MAAAA;AAAD,KAAvC,CAAV,CADJ;AAGH;;AArC+B;;AAuCnC,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ApiProgress extends Component {\n  state = {\n    pendingApiCall: false\n  };\n\n    componentDidMount(){\n\n        axios.interceptors.request.use(request => {\n            this.updateApiCallFor(request.url,true)\n            return request;\n        });\n\n        axios.interceptors.response.use( response => {\n            this.updateApiCallFor(response.config.url,false);\n            return response;\n        },\n             error =>{         \n                 this.updateApiCallFor(error.config.url,false);\n                 throw error;\n                 }\n                 );\n      }\n\n      updateApiCallFor = (url,inProgress)=>{\n          if (url == this.props.path) {\n              this.setState({\n                  pendingApiCall:inProgress\n              });\n          }\n      };\n\n    render() {\n\n        const {pendingApiCall}=this.state;\n        return (\n            <div>    {React.cloneElement(this.props.children,{pendingApiCall})}</div>\n        )\n    }\n}\n export default ApiProgress;"]},"metadata":{},"sourceType":"module"}